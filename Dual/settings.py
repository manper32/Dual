"""
Django settings for Dual project.

Generated by 'django-admin startproject' using Django 3.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
import socket

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = '2%@q#$ynxw7j*tak(8n4t=q82bt!tlpo025x&&oouix(xrl6x3'
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY', '2%@q#$ynxw7j*tak(8n4t=q82bt!tlpo025x&&oouix(xrl6x3')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = str(os.environ.get('DJANGO_DEBUG')).lower() == 'true'
os.environ['HOST_BACK'] = socket.gethostbyname(socket.gethostname())

ALLOWED_HOSTS = [
    'localhost',
    '127.0.0.1',
    os.environ.get('HOST_FRONT'),
    os.environ.get('HOST_BACK'),
]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'corsheaders',
    'ICS'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

CORS_ORIGIN_ALLOW_ALL = str(os.environ.get(
    'CORS_ORIGIN_ALLOW_ALL')).lower() == 'true'

CORS_ORIGIN_WHITELIST = (
    os.environ.get('HOST_FRONT'),
)

ROOT_URLCONF = 'Dual.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Dual.wsgi.application'

# without ORM connection

PSQL_MAIN = {
    'host': os.environ.get('PSQL_MAIN_HOST'),
    'port': os.environ.get('PSQL_MAIN_PORT'),
    'user': os.environ.get('PSQL_MAIN_USER'),
    'password': os.environ.get('PSQL_MAIN_PSW'),
    'database': os.environ.get('PSQL_MAIN_DB'),
}


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    },
    'public': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'OPTIONS': {
            'options': '-c search_path=public'
        },
        'NAME': os.environ.get('PSQL_MAIN_DB'),
        'USER': os.environ.get('PSQL_MAIN_USER'),
        'PASSWORD': os.environ.get('PSQL_MAIN_PSW'),
        'HOST': os.environ.get('PSQL_MAIN_HOST'),
        'PORT': os.environ.get('PSQL_MAIN_PORT')
    },
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'es-co'

TIME_ZONE = 'America/Bogota'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'
# # path to the directory where you would want to store the uploaded files
MEDIA_URL = '/media/'
STATIC_ROOT = os.path.join(os.path.dirname(
    os.path.dirname(BASE_DIR)), 'static')
MEDIA_ROOT = os.path.join(os.path.dirname(os.path.dirname(BASE_DIR)), 'media')

# slash
APPEND_SLASH = False
